{"version":3,"file":"figtree.esm.js","sources":["../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/year.js","../node_modules/d3-time/src/utcDay.js","../node_modules/d3-time/src/utcWeek.js","../node_modules/d3-time/src/utcYear.js","../node_modules/d3-time-format/src/locale.js","../node_modules/d3-time-format/src/defaultLocale.js","../node_modules/d3-array/src/maxIndex.js","../src/utilities.js","../src/evo/tree.js","../node_modules/d3-array/src/max.js"],"sourcesContent":["import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n","//https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge\nimport {timeParse,timeFormat} from \"d3-time-format\"\n\nexport function isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\nexport  function mergeDeep(target, source) {\n    let output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isObject(source[key])) {\n                if (!(key in target))\n                    Object.assign(output, { [key]: source[key] });\n                else\n                    output[key] = mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(output, { [key]: source[key] });\n            }\n        });\n    }\n    return output;\n}\n\n//https://stackoverflow.com/questions/29400171/how-do-i-convert-a-decimal-year-value-into-a-date-in-javascript\n/**\n * Helper function to determine if the provided year is a leap year\n * @param year\n * @return {boolean}\n */\nexport function leapYear(year) {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\n/**\n * A function which converts a decimal float into a date object\n * @param decimalDate\n * @return {Date}\n */\nexport function decimalToDate(decimal){\n    const year = Math.trunc(decimal);\n    const totalNumberOfDays = leapYear(year)? 366:365;\n    const day = Math.round(((decimal-year)*totalNumberOfDays));\n    return timeParse(\"%Y-%j\")(`${year}-${day}`)\n\n}\n\n/**\n * A function that converts a date into a decimal.\n * @param date\n * @return {number}\n */\nexport function dateToDecimal(date){\n    const year = parseInt(timeFormat(\"%Y\")(date));\n    const day = parseInt(timeFormat(\"%j\")(date));\n    const totalNumberOfDays = leapYear(year)? 366:365;\n    return year+day/totalNumberOfDays\n}\n//https://stackoverflow.com/questions/14636536/how-to-check-if-a-variable-is-an-integer-in-javascript\nexport function isInt(value) {\n    return !isNaN(value) &&\n        parseInt(Number(value)) == value &&\n        !isNaN(parseInt(value, 10));\n}\n\nexport const compose=(...fns)=>(arg)=>{\n    return fns.reduceRight((res,fn)=>fn(res),arg);\n}\n\n\n//https://stackoverflow.com/questions/526559/testing-if-something-is-a-class-in-javascript\nexport function isFunction(funcOrClass) {\n    const propertyNames = Object.getOwnPropertyNames(funcOrClass);\n    return (!propertyNames.includes('prototype') || propertyNames.includes('arguments'));\n}","\"use strict\";\n\n/** @module tree */\n\nimport {v4} from \"uuid\";\nimport {timeParse} from \"d3-time-format\";\nimport {maxIndex, max} from \"d3-array\";\nimport {dateToDecimal} from \"../utilities\";\n// import * as BitSetModule from \"bitset\";\n// const BitSet =BitSetModule.__moduleExports;\n// for unique node ids\nexport const Type = {\n    DISCRETE : Symbol(\"DISCRETE\"),\n    BOOLEAN : Symbol(\"BOOLEAN\"),\n    INTEGER : Symbol(\"INTEGER\"),\n    FLOAT: Symbol(\"FLOAT\"),\n    PROBABILITIES: Symbol(\"PROBABILITIES\"),\n};\n\n/**\n * The Tree class\n */\nexport class Tree {\n\n    static DEFAULT_SETTINGS() {\n        return {\n            lengthsKnown:true,\n            heightsKnown:false,\n        }\n    }\n    /**\n     * The constructor takes an object for the root node. The tree structure is\n     * defined as nested node objects.\n     *\n     * @constructor\n     * @param {object} rootNode - The root node of the tree as an object.\n     */\n    constructor(heightsKnown=false) {\n\n        //TODO make private things private with symbols\n\n        this.heightsKnown = heightsKnown;\n        this.lengthsKnown = !heightsKnown;\n        // this._root = makeNode.call(this,{...rootNode,...{length:0,level:0}});\n        // This converts all the json objects to Node instances\n        // setUpNodes.call(this,this.root);\n        this.annotations = {};\n        // for(const node of this.preorder()){\n        //     if (node.label && node.label.startsWith(\"#\")) {\n        //         // an id string has been specified in the newick label.\n        //         node._id = node.label.substring(1);\n        //     }\n        //     this.addAnnotations(node.annotations);\n        //     this._nodeMap.set(node.id, node);\n        // }\n\n        this._tipMap = new Map();\n        this._nodeMap=new Map();\n        this.nodesUpdated = false;\n        // a callback function that is called whenever the tree is changed\n        this._shouldUpdate=true\n\n    };\n    treeUpdateCallback(){};\n    /**\n     * Gets the root node of the Tree\n     *\n     * @returns {Object|*}\n     */\n    get root() {\n        return this._root;\n    };\n\n    set root(node){\n        this._root=node;\n    }\n\n    /**\n     * Gets an array containing all the node objects\n     *\n     * @returns {*}\n     */\n    get nodes() {\n        return [...this.preorder()];\n    };\n\n    /**\n     * get array of node list\n     * @returns {*}\n     */\n    //TODO remove\n    get nodeList(){\n        return this.nodes\n    }\n\n    /**\n     * Gets an array containing all the external node objects\n     *\n     * @returns {*}\n     */\n    get externalNodes() {\n        return this.nodes.filter((node) => !node.children);\n    };\n\n\n\n    /**\n     * Gets an array containing all the internal node objects\n     *\n     * @returns {*}\n     */\n    get internalNodes() {\n        return this.nodes.filter((node) => node.children );\n    };\n\n    get nodeMap(){\n        return this._nodeMap ;\n    }\n    get tipMap(){\n        return this._tipMap ;\n    }\n\n    /**\n     * Returns the sibling of a node (i.e., the first other child of the parent)\n     *\n     * @param node\n     * @returns {object}\n     */\n    getSibling(node) {\n        if (!node.parent) {\n            return null;\n        }\n        return node.parent.children.find((child) => child !== node);\n    }\n\n    /**\n     * Returns a node from its id stored.\n     *\n     * @param id\n     * @returns {object}\n     */\n    getNode(id) {\n        return this.nodeMap.get(id);\n    }\n\n    /**\n     * Returns an external node (tip) from its name.\n     *\n     * @param name\n     * @returns {object}\n     */\n    getExternalNode(name) {\n        return this.tipMap.get(name);\n    }\n\n    /**\n     * If heights are not currently known then calculate heights for all nodes\n     * then return the height of the specified node.\n     * @param node\n     * @returns {number}\n     */\n    getHeight(node) {\n        return node.height;\n    }\n\n    /**\n     * A generator function that returns the nodes in a pre-order traversal.\n     *\n     * @returns {IterableIterator<IterableIterator<*|*>>}\n     */\n    *preorder(startNode=this.root,filter=()=>true) {\n        const traverse = function *(node,filter) {\n            if(filter(node)) {\n                yield node;\n                if (node.children!=null) {\n                    for (const child of node.children) {\n                        yield* traverse(child, filter);\n                    }\n                }\n            }\n        };\n\n        yield* traverse(startNode,filter);\n    }\n\n    /**\n     * A generator function that returns the nodes in a post-order traversal\n     *\n     * @returns {IterableIterator<IterableIterator<*|*>>}\n     */\n    *postorder(startNode=this.root,filter=()=>true) {\n        const traverse = function *(node,filter) {\n            if(filter(node)) {\n                if (node.children!=null) {\n                    for (const child of node.children) {\n                        yield* traverse(child, filter);\n                    }\n                }\n                yield node;\n            }\n        };\n\n        yield* traverse(startNode,filter);\n    }\n\n    /**\n     * A generator function that returns the nodes in a path to the root\n     *\n     * @returns {IterableIterator<IterableIterator<*|*>>}\n     */\n    static* pathToRoot(node) {\n        while (node) {\n            yield node;\n            node = node.parent;\n        }\n    }\n\n    /**\n     * An instance method to return a Newick format string for the Tree. Can be called without a parameter to\n     * start at the root node. Providing another node will generate a subtree. Labels and branch lengths are\n     * included if available.\n     *\n     * @param {object} node - The node of the tree to be written (defaults as the root).\n     * @returns {string}\n     */\n    toNewick(node = this.root) {\n       \n        function oneLiner(node){ return (node.children ? `(${node.children.map(child => oneLiner(child)).join(\",\")})${node.label ? node.label : \"\"}` : node.name) + (node.length ? `:${node.length}` : \"\")};\n\n        return  (oneLiner(node) + \";\");\n    };\n\n    /**\n     * Re-roots the tree at the midway point on the branch above the given node.\n     *\n     * @param {object} node - The node to be rooted on.\n     * @param proportion - proportion along the branch to place the root (default 0.5)\n     */\n    reroot(node, proportion = 0.5) {\n        if (node === this.root) {\n            // the node is the root - nothing to do\n            return;\n        }\n\n        const rootLength = this.root.children[0].length + this.root.children[1].length;\n\n\n        const rootChild1 = node;\n        const rootChild2 = node.parent;\n        const nodeAtTop = node.parent.children[0] === node;\n\n        if (node.parent !== this.root) {\n            // the node is not a child of the existing root so the root is actually changing\n            let node0 = node;\n            let parent = node.parent;\n            let gp = parent.parent;\n\n            // was the node the first child in the parent's children?\n\n            let oldLength = parent.length;\n            let i=0;\n            let done=false;\n            parent.removeChild(node0)\n\n            while (!done) {\n                if (gp === this.root) {\n                    //root should only have 1 child or we arive right away and need to get the sibling\n                    const sibling = this.root.children.length===1? this.root.children[0]:this.getSibling(parent) ;\n                    gp.removeChild(sibling);\n                    gp.removeChild(parent); // just ncase we got here right away\n                    parent.addChild(sibling)\n                    // parent._children.push(sibling);\n                    sibling._length = rootLength;\n                    done = true\n                }else {\n\n                    let tmpGP = gp.parent;\n                    gp.removeChild(parent);\n                    gp.parent.removeChild(gp);\n                    parent.addChild(gp)\n                    // swap the parent and parent's parent's length around\n                    let tmp = gp._length;\n                    gp._length = oldLength;\n                    oldLength = tmp;\n                    // [gp._length, oldLength] = [oldLength, gp._length];\n\n                    node0 = parent;\n                    parent = gp;\n                    gp = tmpGP;\n\n                    // remove the node that will becoming the parent from the children\n                    // parent._children = parent.children.filter((child) => child !== node0);\n\n                }\n\n            }\n\n            // Reuse the root node as root...\n\n            // Set the order of the children to be the same as for the original parent of the node.\n            // This makes for a more visually consistent rerooting graphically.\n\n            if(nodeAtTop){\n                this.root.addChild(rootChild1);\n                this.root.addChild(rootChild2);\n            }else{\n                this.root.addChild(rootChild2);\n                this.root.addChild(rootChild1);\n            }\n\n            // connect all the children to their parents\n            this.internalNodes\n                .forEach((node) => {\n                    node.children.forEach((child) => {\n                        child.parent = node;\n                    })\n                });\n\n            const l = rootChild1.length * proportion;\n            rootChild2._length = l;\n            rootChild1._length = rootChild1.length - l;\n\n        } else {\n            // the root is staying the same, just the position of the root changing\n            const l = node.length * (1.0 - proportion);\n            node._length = l;\n            this.getSibling(node)._length = rootLength - l;\n        }\n\n        this.heightsKnown = false;\n        this.treeUpdateCallback();\n    };\n\n    /**\n     * Reverses the order of the children of the given node. If 'recursive=true' then it will\n     * descend down the subtree reversing all the sub nodes.\n     *\n     * @param node\n     * @param recursive\n     */\n    rotate(node, recursive = false) {\n        if (node.children) {\n            if (recursive) {\n                for (const child of node.children) {\n                    this.rotate(child, recursive);\n                }\n            }\n            node._children.reverse();\n        }\n\n        this.treeUpdateCallback();\n    };\n\n    /**\n     * Sorts the child branches of each node in order of increasing or decreasing number\n     * of tips. This operates recursively from the node given.\n     *\n     * @param node - the node to start sorting from\n     * @param {boolean} increasing - sorting in increasing node order or decreasing?\n     * @returns {Tree} - the number of tips below this node\n     */\n\n\n    orderByNodeDensity(increasing = true, node = this.root) {\n        const factor = increasing ? 1 : -1;\n        orderNodes.call(this, node, (nodeA, countA, nodeB, countB) => {\n            return (countA - countB) * factor;\n        });\n        this.treeUpdateCallback();\n        return this;\n    }\n\n    /**\n     * Sorts the child branches of each node in order given by the function. This operates\n     * recursively from the node given.\n     * recursively from the node given.\n     *\n     * @param node - the node to start sorting from\n     * @param {function} ordering - provides a pairwise sorting order.\n     *  Function signature: (nodeA, childCountNodeA, nodeB, childCountNodeB)\n     * @returns {Tree} - the number of tips below this node\n     */\n    order(ordering, node = this.root) {\n        orderNodes.call(this, node, ordering);\n        this.treeUpdateCallback();\n        return this;\n    }\n    _order(ordering, node = this.root) {\n        orderNodes.call(this, node, ordering);\n        return this;\n    }\n\n    /**\n     * Get the last common ancestor of two nodes.\n     * @param node1\n     * @param node2\n     * @returns {IterableIterator<*>}\n     */\n    lastCommonAncestor(node1, node2) {\n\n        const path1 = [...Tree.pathToRoot(node1)];\n        const path2 = [...Tree.pathToRoot(node2)];\n      \n        const sharedAncestors = path1.filter(n1=>path2.map(n2=>n2.id).indexOf(n1.id)>-1);\n        return sharedAncestors[maxIndex(sharedAncestors, node => node.level)];\n      \n    }\n\n    /**\n     * Get the path length between two nodes\n     * @param node1\n     * @param node2\n     * @returns {number}\n     */\n    pathLength(node1, node2) {\n\n        let sum = 0;\n        \n        const mrca = this.lastCommonAncestor(node1,node2);\n        for(let node of [node1,node2]){\n            while(node!=mrca){\n              sum+=node.length;\n              node=node.parent;\n            }\n        }\n        \n        return sum;\n    }\n\n    /**\n     * Returns a new tree instance with  only the nodes provided and the path to their MRCA. After this traversal, unspecified\n     * degree two nodes will be removed. The subtree will consist of the root and then the last common ancestor.\n     * The nodes of the new tree will be copies of the those in the original, but they will share\n     * ids, annotations, and names.\n     * @param chosenNodes\n     * @return {Tree}\n     */\n    subTree(chosenNodes){\n\n        const sharedNodes = [...chosenNodes.map(node=>[...Tree.pathToRoot(node)])] // get all the paths to the root\n            .reduce((acc,curr)=> [...acc,...curr],[]) // unpack the paths\n            .filter((node,i,all)=> all.filter(x=>x===node).length===chosenNodes.length)        // filter to nodes that appear in every path\n            .reduce((acc,curr)=> { // reduce to the unique set.\n                if(!acc.includes(curr)){\n                    acc.push(curr)\n                }\n                return acc;\n            },[]);\n\n        const mrca = sharedNodes[maxIndex(sharedNodes,n=>n.level)];\n\n        // intermediate nodes with show up as\n        const subtree = new Tree(mrca.toJS());\n\n\n        subtree.externalNodes.forEach(node=>{\n                    if(!chosenNodes.map(n=>n.id).includes(node.id)){\n                        subtree.removeNode(node);\n                    }\n                });\n\n        return subtree;\n    }\n\n\n    /**\n     * Gives the distance from the root to a given tip (external node).\n     * @param tip - the external node\n     * @returns {number}\n     */\n    rootToTipLength(tip) {\n        let length = 0.0;\n        for (const node of Tree.pathToRoot(tip)) {\n            if (node.length) {\n                length += node.length;\n            }\n        }\n        return length;\n    }\n\n    /**\n     * Returns an array of root-to-tip distances for each tip in the tree.\n     * @returns {*}\n     */\n    rootToTipLengths() {\n        return this.externalNodes.map((tip) => this.rootToTipLength(tip));\n    }\n\n    /**\n     * Splits each branch in multiple segments inserting a new degree 2 nodes. If splitLocations is\n     * null then it splits each in two at the mid-point\n     * @param splits\n     */\n    splitBranches(splits = null) {\n        // split each branch into sections, with a node of\n        // degree two in the middle. This allows annotation\n        // of part of a branch.\n        [...this.preorder()]\n            .filter((node) => node.parent)\n            .forEach((node) => {\n                if (splits !== null) {\n                    if (splits[node.id]) {\n                        let splitNode = node;\n                        splits[node.id].forEach(([time, id]) => {\n                            splitNode = this.splitBranch(splitNode, time);\n                            splitNode._id = id;\n                        })\n                    }\n                } else {\n                    // if no splitLocations are given then split it in the middle.\n                    this.splitBranch(node, 0.5);\n                }\n            });\n        this.nodesUpdated=true;\n        this.treeUpdateCallback();\n\n    }\n\n    /**\n     * Splits a branch in two inserting a new degree 2 node. The splitLocation should be less than\n     * the orginal branch length.\n     * @param node\n     * @param splitLocation - proportion of branch to split at.\n     */\n    splitBranch(node, splitLocation=0.5) {\n        const oldLength = node.length;\n\n        const splitNode = this.addNode(\n            {\n            length: oldLength*splitLocation,\n            annotations: {\n                insertedNode: true\n            }\n        });\n        if (node.parent) {\n            node.parent.addChild(splitNode);\n            node.parent.removeChild(node);\n        } else {\n            // node is the root so make splitNode the root\n            this.root = splitNode;\n        }\n        splitNode.addChild(node)\n\n        node._length = oldLength-splitNode.length;\n        this.nodesUpdated=true;\n        this.heightsKnown=false;\n        return splitNode;\n    }\n\n    /**\n     * Deletes a node from the tree. if the node had children the children are linked to the\n     * node's parent. This could result in a multifurcating tree.\n     * The root node can not be deleted.\n     * @param node\n     */\n    removeNode(node){\n        if(node===this.root){\n            return;\n        }\n        // remove the node from it's parent's children\n        const parent = node.parent;\n        node.parent.removeChild(node);\n        //update child lengths\n        if(node.children){\n        node.children.forEach(child=>{\n            child._length += node.length;\n            child.parent = parent;\n            parent.addChild(child);\n            })\n        }else{\n            if(node.name){\n                this._tipMap.delete(node.name);\n            }\n        }\n        this._nodeMap.delete(node._id);\n        // if(parent._children.length===1){\n        //     console.log(\"removing parent\")\n        //     this.removeNode(node.parent); // if it's a tip then remove it's parent which is now degree two;\n        // }\n        this.nodesUpdated = true;\n    }\n\n    addNode(nodeData={},external=false){\n        const node = new Node({...nodeData, tree:this});\n        this._nodeMap.set(node.id, node);\n        if(external){\n            if(node.name===null){\n                throw new Error(\"tips need names\");\n\n            }\n            if(this._tipMap.has(node.name)){\n                throw new Error(\"${node.name} already in tree\");\n            }\n            this._tipMap.set(node.name, node);\n        }\n        return node;\n    }\n\n    /**\n     * deletes a node and all it's descendents from the tree;\n     * @param node\n     * @return {*}\n     */\n    removeClade(node) {\n        if(node===this.root){\n            return;\n        }\n        for(const descendent of this.postorder(node)){\n            this.removeNode(descendent)\n        }\n        this.nodesUpdated=true;\n        this.treeUpdateCallback();\n        return this;\n    }\n\n    /**\n     * Set one or more annotations for the tips.\n     *\n     * See annotateNode for a description of the annotation structure.\n     *\n     * @param annotations a dictionary of annotations keyed by tip label\n     */\n    annotateTips(annotations) {\n        for (let [key, values] of Object.entries(annotations)) {\n            const tip = this.getExternalNode(key);\n            if (!tip) {\n                throw new Error(`tip with label ${key} not found in tree`);\n            }\n\n            this.annotateNode(tip, values);\n        }\n        this.treeUpdateCallback();\n    }\n\n    /**\n     * This is similar to annotateTips but the annotation objects are keyed by node\n     * keys (Symbols).\n     *\n     * @param annotations a dictionary of annotations keyed by node key\n     */\n    annotateNodes(annotations) {\n        for (let [key, values] of Object.entries(annotations)) {\n            const node = this.getNode(key);\n            if (!node) {\n                throw new Error(`tip with key ${key} not found in tree`);\n            }\n\n            this.annotateNode(node, values);\n        }\n        this.treeUpdateCallback();\n\n    }\n\n    /**\n     * Adds the given annotations to a particular node object.\n     *\n     * The annotations is an object with properties keyed by external node labels each\n     * of which is an object with key value pairs for the annotations. The\n     * key value pairs will be added to a property called 'annotations' in the node.\n     *\n     * Boolean or Numerical traits are given as a single value.\n     * Sets of values with probabilities should be given as an object.\n     * Discrete values should be given as an array (even if containing only one value)\n     * or an object with booleans to give the full set of possible trait values.\n     *\n     * For example:\n     *\n     * {\n     *     'tip_1': {\n     *         'trait_1' : true,\n     *         'trait_4' : 3.141592,\n     *         'trait_2' : [1, 2], // discrete trait\n     *         'trait_3' : [\"London\", \"Paris\", \"New York\"], // discrete trait\n     *         'trait_3' : {\"London\" : true, \"Paris\" : false, \"New York\": false], // discrete trait with full set of values\n     *         'trait_4' : {\"London\" : 0.75, \"Paris\" : 0.20, \"New York\": 0.05} // probability set\n     *     },\n     *     'tip_2': {...}\n     * }\n     *\n     * The annotation labels, type and possible values are also added to the tree in a property called 'annotations'.\n     *\n     * A reconstruction method such as annotateNodesFromTips can then be used to provide reconstructed values\n     * for internal nodes. Or annotateNodes can provide annotations for any node in the tree.\n     *\n     * @param node\n     * @param annotations a dictionary of annotations keyed by the annotation name.\n     */\n    annotateNode(node, annotations) {\n        this._addAnnotations(annotations);\n\n        // add the annotations to the existing annotations object for the node object\n        node._annotations = {...(node.annotations === undefined ? {} : node.annotations), ...annotations};\n    }\n\n    /**\n     * Adds the annotation information to the tree. This stores the type and possible values\n     * for each annotation seen in the nodes of the tree.\n     *\n     * This methods also checks the values are correct and conform to previous annotations\n     * in type.\n     *\n     * @param annotations\n     */\n    _addAnnotations(annotations) {\n        for (let [key, addValues] of Object.entries(annotations)) {\n            let annotation = this.annotations[key];\n            if (!annotation) {\n                annotation = {};\n                this.annotations[key] = annotation;\n            }\n\n            if (Array.isArray(addValues)) {\n                // is a set of  values\n                let type;\n                if(addValues.map(v=>isNaN(v)).reduce((acc,curr)=>acc&&curr,true)) {\n                    type = Type.DISCRETE;\n                    annotation.type = type;\n                    if (!annotation.values) {\n                        annotation.values = new Set();\n                    }\n                    annotation.values.add(...addValues);\n                }else if(addValues.map(v=>parseFloat(v)).reduce((acc,curr)=>acc&&Number.isInteger(curr),true)){\n                    type =Type.INTEGER;\n                }else if(addValues.map(v=>parseFloat(v)).reduce((acc,curr)=>acc&&!Number.isInteger(curr),true)){\n                    type = Type.FLOAT;\n                }\n\n                if (annotation.type && annotation.type !== type) {\n                    if ((type === Type.INTEGER && annotation.type === Type.FLOAT) ||\n                        (type === Type.FLOAT && annotation.type === Type.INTEGER)) {\n                        // upgrade to float\n                        type = Type.FLOAT;\n                        annotation.type = Type.FLOAT;\n                        if(annotation.values){\n                            delete annotation.values;\n                    }else{\n                            throw Error(`existing values of the annotation, ${key}, in the tree is discrete.`);\n                        }\n                    }\n                }\n\n                // annotation.values = annotation.values? [...annotation.values, ...addValues]:[...addValues]\n            } else if (Object.isExtensible(addValues)) {\n                // is a set of properties with values\n                let type = null;\n\n                let sum = 0.0;\n                let keys = [];\n                for (let [key, value] of Object.entries(addValues)) {\n                    if (keys.includes(key)) {\n                        throw Error(`the states of annotation, ${key}, should be unique`);\n                    }\n                    if (typeof value === typeof 1.0) {\n                        // This is a vector of probabilities of different states\n                        type = (type === undefined) ? Type.PROBABILITIES : type;\n\n                        if (type === Type.DISCRETE) {\n                            throw Error(`the values of annotation, ${key}, should be all boolean or all floats`);\n                        }\n\n                        sum += value;\n                        if (sum > 1.01) {\n                            throw Error(`the values of annotation, ${key}, should be probabilities of states and add to 1.0`);\n                        }\n                    } else if (typeof value === typeof true) {\n                        type = (type === undefined) ? Type.DISCRETE : type;\n\n                        if (type === Type.PROBABILITIES) {\n                            throw Error(`the values of annotation, ${key}, should be all boolean or all floats`);\n                        }\n                    } else {\n                        throw Error(`the values of annotation, ${key}, should be all boolean or all floats`);\n                    }\n                    keys.push(key);\n                }\n\n                if (annotation.type && annotation.type !== type) {\n                    throw Error(`existing values of the annotation, ${key}, in the tree is not of the same type`);\n                }\n\n                annotation.type = type;\n                annotation.values = annotation.values? [...annotation.values, addValues]:[addValues]\n            } else {\n                let type = Type.DISCRETE;\n\n                if (typeof addValues === typeof true) {\n                    type = Type.BOOLEAN;\n                } else if (!isNaN(addValues)) {\n                    type = (addValues % 1 === 0 ? Type.INTEGER : Type.FLOAT);\n                }\n\n                if (annotation.type && annotation.type !== type) {\n                    if ((type === Type.INTEGER && annotation.type === Type.FLOAT) ||\n                        (type === Type.FLOAT && annotation.type === Type.INTEGER)) {\n                        // upgrade to float\n                        type = Type.FLOAT;\n                    } else {\n                        throw Error(`existing values of the annotation, ${key}, in the tree is not of the same type`);\n                    }\n                }\n\n                if (type === Type.DISCRETE) {\n                    if (!annotation.values) {\n                        annotation.values = new Set();\n                    }\n                    annotation.values.add(addValues);\n                }\n\n                annotation.type = type;\n            }\n\n            // overwrite the existing annotation property\n            this.annotations[key] = annotation;\n        }\n    }\n\n    /**\n     * Uses parsimony to label internal nodes to reconstruct the internal node states\n     * for the annotation 'name'.\n     *\n     * @param name\n     * @param acctrans Use acctrans reconstruction if true, deltrans otherwise\n     * @param node\n     */\n    annotateNodesFromTips(name, acctran = true) {\n        fitchParsimony(name, this.root);\n\n        reconstructInternalStates(name, [], acctran, this.root);\n\n        this.treeUpdateCallback();\n\n    }\n\n    /**\n     * A class function that subscribes a to be called when the tree updates.\n     * @param func - function to be called when the tree updates\n     */\n    subscribeCallback(func){\n        const currentCallback = this.treeUpdateCallback;\n        this.treeUpdateCallback = ()=>{\n            if(!this._shouldUpdate){return}\n            currentCallback();\n            func();\n        }\n    }\n\n    getClades(tipNameMap=null){\n            return  this.nodeList.filter(n=>n.parent).map(node=>node.getClade(tipNameMap));\n    }\n\n    batchUpdateOn(){\n        this._shouldUpdate=false;\n    }\n    batchUpdateOff(){\n        this._shouldUpdate=true;\n        this.treeUpdateCallback()\n    }\n    /**\n     * A class method to create a Tree instance from a Newick format string (potentially with node\n     * labels and branch lengths). Taxon labels should be quoted (either \" or ') if they contain whitespace\n     * or any of the tree definitition characters '(),:;' - the quotes (and any whitespace immediately within)\n     * will be removed.\n     * @param newickString - the Newick format tree as a string\n     * @param labelName\n     * @param datePrefix\n     * @returns {Tree} - an instance of the Tree class\n     */\n    static parseNewick(newickString, options={}) {\n        options ={...{labelName: \"label\",datePrefix:undefined,dateFormat:\"decimal\",tipNameMap:null},...options}\n\n        const tokens = newickString.split(/\\s*('[^']+'|\"[^\"]+\"|;|\\(|\\)|,|:|=|\\[&|\\]|\\{|\\})\\s*/);\n        let level = 0;\n        let currentNode = null;\n        let nodeStack = [];\n        let labelNext = false;\n        let lengthNext = false;\n        let inAnnotation = false;\n        let annotationKeyNext = true;\n        let annotationKey;\n        let isAnnotationARange=false;\n        let annotations={};\n        const tree = new Tree();\n\n        for (const token of tokens.filter(token => token.length > 0)) {\n            // console.log(`Token ${i}: ${token}, level: ${level}`);\n            if(inAnnotation){\n                if(token===\"=\"){\n                    annotationKeyNext=false;\n                }else if(token===\",\"){\n                    if(!isAnnotationARange){\n                        annotationKeyNext=true;\n                    }\n                }else if (token===\"{\"){\n                    isAnnotationARange=true;\n                    annotations[annotationKey]=[];\n                }else if (token===\"}\"){\n                    isAnnotationARange=false\n                }\n                else if(token ===\"]\"){\n                    // close BEAST annotation\n                    inAnnotation = false;\n                    annotationKeyNext = true;\n                    tree.annotateNode(currentNode, annotations);\n                    annotations={};\n                } else{\n                    // must be annotation\n                    // remove any quoting and then trim whitespace\n                    let annotationToken = token;\n                    if (annotationToken.startsWith(\"\\\"\") || annotationToken.startsWith(\"'\")) {\n                        annotationToken = annotationToken.substr(1);\n                    }\n                    if (annotationToken.endsWith(\"\\\"\") || annotationToken.endsWith(\"'\")) {\n                        annotationToken = annotationToken.substr(0, annotationToken.length - 1);\n                    }\n                    if(annotationKeyNext) {\n                        annotationKey = annotationToken.replace(\".\",\"_\");\n                    }else{\n                        if(isAnnotationARange){\n                            annotations[annotationKey].push(annotationToken);\n                        }else{\n                            if(isNaN(annotationToken)){\n                                annotations[annotationKey]=annotationToken;\n\n                            }else{\n                                annotations[annotationKey] = parseFloat((annotationToken));\n                            }\n                        }\n                    }\n                }\n\n            } else if (token === \"(\") {\n                // an internal node\n\n                if (labelNext) {\n                    // if labelNext is set then the last bracket has just closed\n                    // so there shouldn't be an open bracket.\n                    throw new Error(\"expecting a comma\");\n                }\n\n                let node = tree.addNode();\n\n                level += 1;\n                if (currentNode) {\n                    nodeStack.push(currentNode);\n                }else{\n                    tree.root=node;\n                }\n                currentNode = node;\n\n            } else if (token === \",\") {\n                // another branch in an internal node\n\n                labelNext = false; // labels are optional\n                if (lengthNext) {\n                    throw new Error(\"branch length missing\");\n                }\n\n                let parent = nodeStack.pop();\n                parent.addChild(currentNode);\n                currentNode.parent = parent;\n\n                currentNode = parent;\n            } else if (token === \")\") {\n                // finished an internal node\n\n                labelNext = false; // labels are optional\n                if (lengthNext) {\n                    throw new Error(\"branch length missing\");\n                }\n\n                // the end of an internal node\n                let parent = nodeStack.pop();\n                if(parent === undefined){\n                    throw new Error( \"the brackets in the newick file are not balanced: too many closed\")\n                }\n                parent.addChild(currentNode);\n                currentNode.parent = parent;\n                level -= 1;\n                currentNode = parent;\n\n                labelNext = true;\n            } else if (token === \":\") {\n                labelNext = false; // labels are optional\n                lengthNext = true;\n            } else if (token === \";\") {\n                // end of the tree, check that we are back at level 0\n                if (level > 0) {\n                    throw new Error(\"the brackets in the newick file are not balanced: too many opened\")\n                }\n                break;\n            } else if(token ===\"[&\") {\n                inAnnotation=true;\n            }\n            else {\n                // not any specific token so may be a label, a length, or an external node name\n                if (lengthNext) {\n                    currentNode.length = parseFloat(token);\n                    lengthNext = false;\n                } else if (labelNext) {\n                    currentNode.label = token;\n                    if (!currentNode.label.startsWith(\"#\")) {\n                        let value = parseFloat(currentNode.label);\n                        if (isNaN(value)) {\n                            value = currentNode.label;\n                        }\n                        let label_annotation={};\n                        label_annotation[options.labelName] = value;\n                        tree.annotateNode(currentNode,label_annotation)\n                    }\n                    labelNext = false;\n                } else {\n\n                    let name = options.tipNameMap?options.tipNameMap.get(token):token;\n\n                    // remove any quoting and then trim whitespace\n                    if (name.startsWith(\"\\\"\") || name.startsWith(\"'\")) {\n                        name = name.substr(1);\n                    }\n                    if (name.endsWith(\"\\\"\") || name.endsWith(\"'\")) {\n                        name = name.substr(0, name.length - 1);\n                    }\n                    name = name.trim();\n\n                    let decimalDate = undefined;\n                    let date = undefined;\n                    if (options.datePrefix) {\n                        const parts = name.split(options.datePrefix);\n                        if (parts.length === 0) {\n                            throw new Error(`the tip, ${name}, doesn't have a date separated by the prefix, '${options.datePrefix}'`);\n                        }\n                        const dateBit = parts[parts.length-1];\n                        if(options.dateFormat===\"decimal\"){\n                            decimalDate = parseFloat(parts[parts.length - 1]);\n                        }else{\n                            date = timeParse(options.dateFormat)(dateBit);\n                            if(!date){\n                                date = timeParse(options.dateFormat)(`${dateBit}-15`)\n                            }\n                            if(!date){\n                                date = timeParse(options.dateFormat)(`${dateBit}-06-15`)\n                            }\n                            decimalDate = dateToDecimal(date);\n                        }\n\n                    }\n\n                    const externalNode = tree.addNode( {name: name.replace(/\\'/g,'')},\n                        true);\n                    if(decimalDate!==null){\n                        tree.annotateNode(externalNode,{ date: decimalDate })\n                    }\n\n                    if (currentNode) {\n                        nodeStack.push(currentNode);\n                    }\n                    currentNode = externalNode;\n                }\n            }\n        }\n\n        if (level > 0) {\n            throw new Error(\"the brackets in the newick file are not balanced\")\n        }\n        return tree;\n    };\n\n    /*\n\n     */\n   static  parseNexus(nexus,options={}){\n\n        const trees=[];\n\n       // odd parts ensure we're not in a taxon label\n       //TODO make this parsing more robust\n       const nexusTokens = nexus.split(/\\s*(?:\\bBegin\\s+|\\bbegin\\s+|\\bBEGIN\\s+|\\bend\\s*;|\\bEnd\\s*;|\\bEND\\s*;)\\s*/).filter(d=> d!==\"\")\n       const firstToken = nexusTokens.shift().trim();\n       if(firstToken.toLowerCase()!=='#nexus'){\n            throw Error(\"File does not begin with #NEXUS is it a nexus file?\")\n        }\n        for(const section of nexusTokens){\n            const workingSection = section.replace(/^\\s+|\\s+$/g, '').split(/\\n/);\n            const sectionTitle = workingSection.shift();\n            if(sectionTitle.toLowerCase().trim() ===\"trees;\"){\n                let inTaxaMap=false;\n                const tipNameMap = new Map();\n                for(const token of workingSection){\n                    if(token.trim().toLowerCase()===\"translate\"){\n                        inTaxaMap=true;\n                    }else{\n                        if(inTaxaMap){\n                            if(token.trim()===\";\"){\n                                inTaxaMap=false;\n                            }else{\n                                const taxaData = token.trim().replace(\",\",\"\").split(/\\s*\\s\\s*/);\n                                tipNameMap.set(taxaData[0],taxaData[1]);\n                            }\n                        }else{\n                                const treeString = token.substring(token.indexOf(\"(\"));\n                            if(tipNameMap.size>0) {\n                                const thisTree = Tree.parseNewick(treeString, {...options, tipNameMap: tipNameMap});\n                                trees.push(thisTree);\n                            }else{\n                                const thisTree = Tree.parseNewick(treeString, {...options});\n                                trees.push(thisTree);\n                            }\n                        }\n                    }\n                }\n            }\n\n        }\n        return trees;\n    }\n\n}\n\n/*\n * Private methods, called by the class using the <function>.call(this) function.\n */\n\n/**\n * A private recursive function that rotates nodes to give an ordering provided\n * by a function.\n * @param node\n * @param ordering function that takes (a,number of tips form a, b, number of tips from b) and sorts a and be by the output.\n * @param callback an optional callback that is called each rotate\n * @returns {number}\n */\nfunction orderNodes(node, ordering, callback = null) {\n    let count = 0;\n    if (node.children) {\n        // count the number of descendents for each child\n        const counts = new Map();\n        for (const child of node.children) {\n            const value = orderNodes(child, ordering, callback);\n            counts.set(child.id, value);\n            count += value;\n        }\n        // sort the children using the provided function\n      node._children.sort((a, b) => {\n            return ordering(a, counts.get(a), b, counts.get(b), node)\n        })\n\n        if (callback) callback();\n    } else {\n        count = 1\n    }\n    return count;\n}\n\n/**\n * A private recursive function that calculates the height of each node (with the most\n * diverged tip from the root having height given by origin).\n */\n//TODO bug in node height when in observable\nfunction calculateHeights(tree) {\n\n    const maxRTT = max(tree.rootToTipLengths());\n    tree.nodeList.forEach((node) => node._height =  maxRTT - tree.rootToTipLength(node));\n    tree.heightsKnown = true;\n    tree.lengthsKnown=false;\n    // this.treeUpdateCallback();\n}\n\n/**\n * A private recursive function that calculates the length of the branch below each node\n */\nfunction calculateLengths(tree){\n    tree.nodeList.forEach((node)=> node._length =node.parent? node.parent.height- node.height:0);\n    tree.lengthsKnown=true;\n    tree.heightsKnown=false;\n    // this.treeUpdateCallback();\n\n}\n\n\n\n\n/**\n * A private recursive function that uses the Fitch algorithm to assign\n * states to nodes using parsimony. An acctrans or deltrans algorithm can\n * then be used to reconstruct internal node states.\n * @param name\n * @param node\n * @returns {*}\n */\nfunction fitchParsimony(name, node) {\n\n    if (!node.children) {\n        if (!node.annotations[name]) {\n            return []; // annotation not defined so return an empty set\n        }\n        return (Array.isArray(node.annotations[name]) ? node.annotations[name] : [node.annotations[name]]);\n    }\n\n    let I;\n    let U = [];\n    node.children.forEach( (child) => {\n        const childStates = fitchParsimony(name, child);\n        U = [...U, ...childStates.filter( (state) => !U.includes(state) )]; // take the union\n        I = (I === undefined ? childStates : childStates.filter( (state) => I.includes(state) )); // take the intersection\n    });\n\n    // node.annotations = (node.annotations === undefined ? {} : node.annotations);\n\n    // set the node annotation to the intersection if not empty, the union otherwise\n    this.annotateNode(node, {[name]:[...(I.length > 0 ? I : U)]});\n\n    return node.annotations[name];\n}\n\nfunction reconstructInternalStates(name, parentStates, acctran, node ) {\n    let nodeStates = node.annotations[name];\n    if (!Array.isArray(nodeStates)) {\n        nodeStates = [nodeStates];\n    }\n\n    if (node.children) {\n\n        let stateCounts = {};\n\n        nodeStates\n            .forEach((state) => stateCounts[state] = (stateCounts[state] ? stateCounts[state] += 1 : 1) );\n\n        parentStates\n            .forEach((state) => stateCounts[state] = (stateCounts[state] ? stateCounts[state] += 1 : 1) );\n\n        node.children.forEach((child) => {\n            reconstructInternalStates(name, nodeStates, acctran, child)\n                .forEach((state) => stateCounts[state] = (stateCounts[state] ? stateCounts[state] += 1 : 1) );\n        });\n\n        const max = Object.entries(stateCounts).reduce((prev, current) => (prev[1] > current[1]) ? prev : current)[1];\n        nodeStates = Object.entries(stateCounts).filter(([state, count]) => count === max).map(([state, count]) => state );\n\n        node.annotations[name] = (nodeStates.length === 1 ? nodeStates[0] : nodeStates);\n    }\n\n    return nodeStates;\n}\nfunction makeNode(nodeData,external=false){\n    const node = new Node({...nodeData, tree:this});\n    this._nodeMap.set(node.id, node);\n    if(external){\n        if(this._tipMap.has(node.name)){\n            throw new Error(\"${node.name} already in tree\");\n        }\n        this._tipMap.set(node.name, node);\n    }\n}\n\n// /**\n//  * A private function that sets up the tree by traversing from the root Node and sets all heights and lengths\n//  * @param node\n//  */\n// function setUpNodes(node){\n//     if(node.children){\n//         const childrenNodes=[]\n//         for(const child of node.children){\n//             //HERE?\n//             const childNode = makeNode.call(this,{...child,parent:node,level:node.level+1})\n//             childrenNodes.push(childNode);\n//             setUpNodes.call(this,childNode);\n//         }\n//         node.children = childrenNodes;\n//     }\n// }\n\n// function setUpArraysAndMaps() {\n//     this.nodesUpdated=false;\n//     this._nodeMap = new Map(this.preorder().map((node) => [node.id, node]));\n//     this._tipMap = new Map(this.externalNodes.map((tip) => [tip.name, tip]));\n//     for( const node in this.preorder()){\n//         if (node.label && node.label.startsWith(\"#\")) {\n//             // an id string has been specified in the newick label.\n//             node._id = node.label.substring(1);\n//         }\n//         if (node.annotations) {\n//             this.addAnnotations(node.annotations);\n//         }\n//     };\n//     //TODO add to loop above\n//\n// }\n\n/**\n * The node class. This wraps a node in a tree and notifies the tree when\n * the node updates. It can be treated almost exactly like an object. It just has\n * helper setters and getters to handel changes, and a few extra methods.\n * {\n            height:undefined,\n            divergence:undefined,\n            length:undefined,\n            name:null,\n            annotations:{},\n            parent:undefined,\n            children:null,\n            label:undefined,\n            id:`node-${v4()}`\n        }\n */\n\nclass Node{\n\n\n\n    static DEFAULT_NODE(){\n        return{\n            height:undefined,\n            divergence:undefined,\n            length:undefined,\n            name:null,\n            annotations:{},\n            parent:undefined,\n            children:null,\n            label:undefined,\n\n        }\n\n    }\n\n\n    constructor(nodeData ={}){\n        const data = {...Node.DEFAULT_NODE(),...nodeData};\n//TODO like symbol here but need id's in figure\n        // this._id = Symbol(\"node\");\n        this._id = ` node-${v4()}`\n        this._height = data.height;\n        this._length = data.length;\n        this._name = data.name;\n        this._annotations= data.annotations;\n        this._parent = data.parent;\n        this._children = data.children;\n        this._tree = data.tree;\n        this._label = data.label;\n\n\n    }\n    get level() {\n        let level=0;\n        let node=this;\n        while(node.parent){\n            node=node.parent;\n            level+=1\n        }\n        return level;\n    }\n    get name() {\n        return this._name;\n    }\n    set name(value){\n        this._tree.nodesUpdated=true;\n        this._name = value;\n    }\n\n    get label() {\n        return this._label;\n    }\n\n    set label(value) {\n        this._label = value;\n    }\n    get height() {\n        if(!this._tree.heightsKnown){\n            calculateHeights(this._tree);\n        }\n        return this._height;\n    }\n\n    get divergence(){\n        if(this._tree.lengthsKnown){\n            if(this.parent){\n                return this.parent.divergence+this.length\n            }else{\n                return 0\n            }\n        }else{\n            calculateLengths(this._tree);\n            return this.divergence;\n        }\n    }\n\n    set height(value) {\n        this._height = value;\n        this._tree.lengthsKnown=false;\n        // this._tree.treeUpdateCallback();\n    }\n\n    get length() {\n        if(!this._tree.lengthsKnown){\n            calculateLengths.call(this._tree);\n        }\n        return this._length;\n    }\n\n    set length(value) {\n        if(!this._tree.lengthsKnown){\n            calculateLengths.call(this._tree);\n        }\n        this._length = value;\n        // this._tree.treeUpdateCallback();\n    }\n\n    get annotations() {\n        return {...this._annotations};\n    }\n\n    set annotations(value){\n        throw new Error(\"node annotations can not be set this way. The tree needs to know about annotation types. Use tree.annotateNode to set annotations\")\n    }\n    /**\n     * Return an array over the children nodes\n     * @return {*}\n     */\n    //TODO return empty not null\n    get children() {\n        if(this._children===null){\n            return null\n        }\n        return this._children.map(childId=>this._tree.getNode(childId));\n    }\n    removeChild(node){\n        this._children= this._children.filter(childId => childId !== node.id);\n        node._parent=null;\n    }\n\n    addChild(node) {\n        if(this._children===null){\n            this._children=[];\n        }\n        this._children.push(node.id);\n        node.parent = this;\n    }\n\n    // set children(value) {\n    //     this._children = value;\n    //     for(const child of this._children){\n    //         child.parent=this;\n    //     }\n    //     this._tree.nodesUpdated = true;\n    // }\n    get parent() {\n        return this._tree.getNode(this._parent);\n    }\n\n    set parent(parent){\n        this._parent=parent.id\n    }\n    // set parent(node) {\n    //     this._parent = node;\n    //     if(this._parent.children.filter(c=>c===this).length===0){\n    //         this._parent.children.push(this)\n    //     }\n    //     this._tree.nodesUpdated = true;\n    // }\n    get id(){\n        return this._id;\n    }\n    get tree(){\n        return this._tree;\n    }\n    //TODO use bitmap not int\n    getClade(tipNameMap=null){\n        if(tipNameMap==null && this.clade && this._tree.nodesUpdated===false){\n            return(this._clade)\n        }\n\n        let bits = [];\n        if(!this.children){\n            const nodeNumericId = tipNameMap? tipNameMap.get(this.name):this.id;\n            if(nodeNumericId!==parseInt(nodeNumericId)){\n                throw new Error(\"Getting clade requires tips have integer id's. If they do not please provide a map to integers keyed by the tips' names \")\n            }\n            bits = bits.concat(this.id);\n            this._clade = bits;\n        }else{\n            for(const child of this.children){\n                bits = bits.concat(child.getClade(tipNameMap));\n            }\n           this._clade=bits;\n        }\n        return bits;\n    };\n\n\n    toJS(){\n        return ({\n                // id: this.id,\n                name:this.name,\n                length:this.length,\n                height:this.height,\n                label:this.label,\n                level:this.level,\n                annotations:this.annotations,\n                children: this.children && this.children.length>0? this.children.map(child=>child.toJS()):null,\n                });\n}\n\n\n}\n\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n"],"names":["getRandomValues","byteToHex","i","push","toString","slice","rnds8","Uint8Array","rng","crypto","bind","Error","native","randomUUID","v4","options","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","step","Math","range","start","stop","previous","filter","test","setTime","end","every","isFinite","d","durationDay","durationWeek","day","setHours","setDate","getDate","getTimezoneOffset","timeDay","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","year","setMonth","setFullYear","getFullYear","k","timeYear","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDay$1","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcYear","setUTCMonth","setUTCFullYear","getUTCFullYear","utcYear$1","localDate","y","m","H","M","S","L","utcDate","UTC","newDate","locale","timeFormat","timeParse","pads","_","numberRe","percentRe","requoteRe","pad","value","fill","width","sign","string","Array","join","requote","s","replace","formatRe","names","RegExp","map","formatLookup","n","parseWeekdayNumberSunday","exec","w","parseWeekdayNumberMonday","u","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseQuarter","q","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","p","formatHour24","getHours","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","getMonth","formatMinutes","getMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","dISO","timeThursday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatYearISO","formatFullYear","formatFullYearISO","formatZone","z","formatUTCDayOfMonth","formatUTCHour24","getUTCHours","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","getUTCMonth","formatUTCMinutes","getUTCMinutes","formatUTCSeconds","getUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","UTCdISO","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCYearISO","formatUTCFullYear","formatUTCFullYearISO","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","maxIndex","values","valueof","max","index","undefined","dateToDecimal","parseInt","totalNumberOfDays","leapYear","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","a","A","b","B","c","e","f","g","G","I","j","x","X","Y","utcFormats","parses","parseSpecifier","newFormat","specifier","format","charCodeAt","charAt","newParse","week","parse","utcFormat","utcParse","formatLocale","Type","DISCRETE","Symbol","BOOLEAN","INTEGER","FLOAT","PROBABILITIES","Tree","DEFAULT_SETTINGS","lengthsKnown","heightsKnown","constructor","this","annotations","_tipMap","Map","_nodeMap","nodesUpdated","_shouldUpdate","treeUpdateCallback","root","_root","node","nodes","preorder","nodeList","externalNodes","children","internalNodes","nodeMap","tipMap","getSibling","parent","find","child","getNode","id","get","getExternalNode","name","getHeight","height","startNode","traverse","postorder","pathToRoot","toNewick","oneLiner","label","reroot","proportion","rootLength","rootChild1","rootChild2","nodeAtTop","node0","gp","oldLength","done","removeChild","sibling","addChild","_length","tmpGP","tmp","forEach","l","rotate","recursive","_children","reverse","orderByNodeDensity","increasing","factor","orderNodes","call","nodeA","countA","nodeB","countB","order","ordering","_order","lastCommonAncestor","node1","node2","path1","path2","sharedAncestors","n1","n2","indexOf","level","pathLength","sum","mrca","subTree","chosenNodes","sharedNodes","reduce","acc","curr","all","includes","subtree","toJS","removeNode","rootToTipLength","tip","rootToTipLengths","splitBranches","splits","splitNode","splitBranch","_id","splitLocation","addNode","insertedNode","delete","nodeData","external","Node","tree","set","has","removeClade","descendent","annotateTips","key","Object","entries","annotateNode","annotateNodes","_addAnnotations","_annotations","addValues","annotation","isArray","type","v","isNaN","Set","add","parseFloat","Number","isInteger","isExtensible","keys","annotateNodesFromTips","acctran","fitchParsimony","reconstructInternalStates","subscribeCallback","func","currentCallback","getClades","tipNameMap","getClade","batchUpdateOn","batchUpdateOff","parseNewick","newickString","labelName","datePrefix","dateFormat","tokens","split","annotationKey","currentNode","nodeStack","labelNext","lengthNext","inAnnotation","annotationKeyNext","isAnnotationARange","token","annotationToken","startsWith","substr","endsWith","pop","label_annotation","decimalDate","trim","parts","dateBit","externalNode","parseNexus","nexus","trees","nexusTokens","shift","section","workingSection","inTaxaMap","taxaData","treeString","substring","size","thisTree","callback","counts","sort","calculateLengths","childStates","state","parentStates","nodeStates","stateCounts","prev","current","DEFAULT_NODE","divergence","data","_height","_name","_parent","_tree","_label","maxRTT","calculateHeights","childId","clade","bits","concat","_clade","nodeNumericId"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17]}