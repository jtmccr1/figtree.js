!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e){t.exports=d3},function(t,e,n){"use strict";n.r(e);const i={DISCRETE:Symbol("DISCRETE"),BOOLEAN:Symbol("BOOLEAN"),INTEGER:Symbol("INTEGER"),FLOAT:Symbol("FLOAT"),PROBABILITIES:Symbol("PROBABILITIES")};class s{constructor(t={},e=!1){this.root=t,e&&[...this.preorder()].forEach(t=>{if(t.parent){let e={parent:t.parent,children:[t],length:t.length/2,annotations:{midpoint:!0}};t.parent.children[t.parent.children.indexOf(t)]=e,t.parent=e,t.length=e.length}}),this.annotations={},this.nodeList=[...this.preorder()],this.nodeList.forEach((t,e)=>{t.id=`node_${e}`,this.addAnnotations(t.annotations)}),this.nodeMap=new Map(this.nodeList.map(t=>[t.id,t])),this.tipMap=new Map(this.externalNodes.map(t=>[t.name,t])),this.treeUpdateCallback=(()=>{})}get rootNode(){return this.root}get nodes(){return[...this.nodeList]}get externalNodes(){return this.nodes.filter(t=>!t.children)}get internalNodes(){return this.nodes.filter(t=>t.children)}getSibling(t){return t.parent?t.parent.children.find(e=>e!==t):null}getNode(t){return this.nodeMap.get(t)}getExternalNode(t){return this.tipMap.get(t)}*preorder(){const t=function*(e){if(yield e,e.children)for(const n of e.children)yield*t(n)};yield*t(this.root)}*postorder(){const t=function*(e){if(e.children)for(const n of e.children)yield*t(n);yield e};yield*t(this.root)}static*pathToRoot(t){for(;t;)yield t,t=t.parent}toNewick(t=this.rootNode){return(t.children?`(${t.children.map(t=>this.toNewick(t)).join(",")})${t.label?t.label:""}`:t.name)+(t.length?`:${t.length}`:"")}reroot(t,e=.5){if(t===this.rootNode)return;const n=this.rootNode.children[0].length+this.rootNode.children[1].length;if(t.parent!==this.rootNode){let i=t,s=t.parent,r=[];const o=s.children[0]===t,a=t,l=s;let h=s.length;for(;s.parent;){if(s.children=s.children.filter(t=>t!==i),s.parent===this.rootNode){const t=this.getSibling(s);s.children.push(t),t.length=n}else[s.parent.length,h]=[h,s.parent.length],s.children.push(s.parent);r=[s,...r],i=s,s=s.parent}this.rootNode.children=o?[a,l]:[l,a],this.internalNodes.forEach(t=>{t.children.forEach(e=>{e.parent=t})});const d=a.length*e;l.length=d,a.length=a.length-d}else{const i=t.length*(1-e);t.length=i,this.getSibling(t).length=n-i}this.treeUpdateCallback()}rotate(t,e=!1){if(t.children){if(e)for(const n of t.children)this.rotate(n,e);t.children.reverse()}this.treeUpdateCallback()}order(t=this.rootNode,e=!0){(function t(e,n,i=null){const s=n?1:-1;let r=0;if(e.children){const o=new Map;for(const s of e.children){const e=t(s,n,i);o.set(s,e),r+=e}e.children.sort((t,e)=>(o.get(t)-o.get(e))*s),i&&i()}else r=1;return r}).call(this,t,e),this.treeUpdateCallback()}lastCommonAncestor(t,e){throw new Error("method 'lastCommonAncestor' is not implemented yet")}pathLength(t,e){throw new Error("method 'pathLength' is not implemented yet")}rootToTipLength(t){let e=0;for(const n of s.pathToRoot(t))n.length&&(e+=n.length);return e}rootToTipLengths(){return this.externalNodes.map(t=>this.rootToTipLength(t))}annotateTips(t){for(let[e,n]of Object.entries(t)){const t=this.getExternalNode(e);if(!t)throw new Error(`tip with label ${e} not found in tree`);this.annotateNode(t,n)}}annotateNodes(t){for(let[e,n]of Object.entries(t)){const t=this.getNode(e);if(!t)throw new Error(`tip with key ${e} not found in tree`);this.annotateNode(t,n)}}annotateNode(t,e){this.addAnnotations(e),t.annotations={...void 0===t.annotations?{}:t.annotations,...e}}addAnnotations(t){for(let[e,n]of Object.entries(t)){let t=this.annotations[e];if(t||(t={},this.annotations[e]=t),Array.isArray(n)){const s=i.DISCRETE;if(t.type&&t.type!==s)throw Error(`existing values of the annotation, ${e}, in the tree is not of the same type`);t.type=s,t.values=[...t.values,...n]}else if(Object.isExtensible(n)){let s=null,r=0,o=[];for(let[t,e]of Object.entries(n)){if(o.includes(t))throw Error(`the states of annotation, ${t}, should be unique`);if("number"==typeof e){if((s=void 0===s?i.PROBABILITIES:s)===i.DISCRETE)throw Error(`the values of annotation, ${t}, should be all boolean or all floats`);if((r+=e)>1)throw Error(`the values of annotation, ${t}, should be probabilities of states and add to 1.0`)}else{if(typeof e!=typeof!0)throw Error(`the values of annotation, ${t}, should be all boolean or all floats`);if((s=void 0===s?i.DISCRETE:s)===i.PROBABILITIES)throw Error(`the values of annotation, ${t}, should be all boolean or all floats`)}o.append(t)}if(t.type&&t.type!==s)throw Error(`existing values of the annotation, ${e}, in the tree is not of the same type`);t.type=s,t.values=[...t.values,...n]}else{let s=i.DISCRETE;if(typeof n==typeof!0?s=i.BOOLEAN:Number(n)&&(s=n%1==0?i.INTEGER:i.FLOAT),t.type&&t.type!==s){if(!(s===i.INTEGER&&t.type===i.FLOAT||s===i.FLOAT&&t.type===i.INTEGER))throw Error(`existing values of the annotation, ${e}, in the tree is not of the same type`);s=i.FLOAT}s===i.DISCRETE&&(t.values||(t.values=new Set),t.values.add(n)),t.type=s}this.annotations[e]=t}}annotateNodesFromTips(t,e=!0){!function t(e,n){if(!n.children)return n.annotations[e]?Array.isArray(n.annotations[e])?n.annotations[e]:[n.annotations[e]]:[];let i;let s=[];n.children.forEach(n=>{const r=t(e,n);s=[...s,...r.filter(t=>!s.includes(t))],i=void 0===i?r:r.filter(t=>i.includes(t))});n.annotations=void 0===n.annotations?{}:n.annotations;n.annotations[e]=[...i.length>0?i:s];return n.annotations[e]}(t,this.rootNode),function t(e,n,i,s){let r=s.annotations[e];Array.isArray(r)||(r=[r]);if(s.children){let o={};r.forEach(t=>o[t]=o[t]?o[t]+=1:1),n.forEach(t=>o[t]=o[t]?o[t]+=1:1),s.children.forEach(n=>{t(e,r,i,n).forEach(t=>o[t]=o[t]?o[t]+=1:1)});const a=Object.entries(o).reduce((t,e)=>t[1]>e[1]?t:e)[1];r=Object.entries(o).filter(([t,e])=>e===a).map(([t,e])=>t),s.annotations[e]=1===r.length?r[0]:r}return r}(t,[],e,this.rootNode)}static parseNewick(t,e="label",n,i=!1){const r=t.split(/\s*('[^']+'|"[^"]+"|;|\(|\)|,|:)\s*/);let o=0,a=null,l=[],h=!1,d=!1;for(const t of r.filter(t=>t.length>0))if("("===t){if(h)throw new Error("expecting a comma");let t={level:o,parent:a,children:[],annotations:{}};o+=1,a&&l.push(a),a=t}else if(","===t){if(h=!1,d)throw new Error("branch length missing");let t=l.pop();t.children.push(a),a=t}else if(")"===t){if(h=!1,d)throw new Error("branch length missing");let t=l.pop();t.children.push(a),o-=1,a=t,h=!0}else if(":"===t)h=!1,d=!0;else{if(";"===t){if(o>0)throw new Error("unexpected semi-colon in tree");break}if(d)a.length=parseFloat(t),d=!1;else if(h){a.label=t;let n=parseFloat(a.label);isNaN(n)&&(n=a.label),a.annotations[e]=n,h=!1}else{a.children||(a.children=[]);let e=t;(e.startsWith('"')||e.startsWith("'"))&&(e=e.substr(1)),(e.endsWith('"')||e.endsWith("'"))&&(e=e.substr(0,e.length-1)),e=e.trim();let i=void 0;if(n){const t=e.split(n);if(0===t.length)throw new Error(`the tip, ${e}, doesn't have a date separated by the prefix, '${n}'`);i=parseFloat(t[t.length-1])}const s={name:e,date:i,parent:a,annotations:{}};a&&l.push(a),a=s}}if(o>0)throw new Error("the brackets in the newick file are not balanced");return new s(a,i)}}var r=n(0);function o(t){const e=[...t.postorder()];e.filter(t=>!t.children).forEach((t,e)=>t.width=e),e.forEach(t=>{t.height=this.tree.rootToTipLength(t),t.children&&(t.width=r.mean(t.children,t=>t.width))}),e.filter(t=>t.parent).forEach(t=>{t.location=[{height:t.parent.height,width:t.parent.width},{height:t.height,width:t.width}]})}function a(t){const e=[...t.postorder()];e.filter(t=>!t.children).forEach((t,e)=>t.width=e),e.forEach(t=>{t.height=this.tree.rootToTipLength(t),t.children&&(t.width=t.children[0].width)}),e.filter(t=>t.parent).forEach(t=>{t.location=[{height:t.parent.height,width:t.parent.width},{height:t.height,width:t.width}]})}class l{static DEFAULT_SETTINGS(){return{xAxisTickArguments:[5,"f"],xAxisTitle:"Divergence",nodeRadius:6,hoverNodeRadius:8,nodeBackgroundBorder:1,lengthFormat:r.format(".2f"),branchCurve:r.curveStepBefore}}constructor(t,e,n,i={}){this.tree=e,this.margins=n,this.settings={...l.DEFAULT_SETTINGS(),...i},this.layout=o,function(t,e){const n=t.getBoundingClientRect().width,i=t.getBoundingClientRect().height;r.select(t).select("g").remove(),r.select(t).append("g"),this.svgSelection=r.select(t).select("g");const s=this.tree.externalNodes.length,o=r.max([...this.tree.rootToTipLengths()]),a=r.scaleLinear().domain([0,o]).range([e.left,n-e.right]),l=r.scaleLinear().domain([0,s-1]).range([e.top+20,i-e.bottom-20]);this.scales={x:a,y:l,width:n,height:i},this.layout(this.tree),function(){const t=r.line().x(t=>this.scales.x(t.height)).y(t=>this.scales.y(t.width)).curve(this.settings.branchCurve),e=this.tree.nodes.filter(t=>t.location);this.svgSelection.selectAll("path").data(e).enter().append("path").attr("class","branch").attr("id",t=>t.id).attr("d",e=>t(e.location)),this.svgSelection.selectAll("text").data(e).enter().append("text").attr("class","branch-label length").attr("dx",t=>this.scales.x((t.parent.height+t.height)/2)).attr("dy",t=>t.children&&t.parent&&t.parent.children[0]===t?this.scales.y(t.width)+6:this.scales.y(t.width)-6).attr("text-anchor","middle").attr("alignment-baseline",t=>t.children&&t.parent&&t.parent.children[0]===t?"hanging":"bottom").text(t=>this.settings.lengthFormat(t.length))}.call(this),function(){const t=this.tree.nodes.filter(t=>!t.children||t.children.length>1),e=this.tree.internalNodes.filter(t=>1===t.children.length);this.settings.nodeBackgroundBorder>0&&(e.length>0&&this.svgSelection.selectAll("g").data(e,t=>t.id).enter().append("rect").attr("class",t=>["node-background",t.children?"internal-node":"external-node"].join(" ")).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`).attr("x",-(.25*this.settings.nodeRadius+this.settings.nodeBackgroundBorder)).attr("width",.5*this.settings.nodeRadius+2*this.settings.nodeBackgroundBorder).attr("y",-(1.5*this.settings.nodeRadius+this.settings.nodeBackgroundBorder)).attr("height",3*this.settings.nodeRadius+2*this.settings.nodeBackgroundBorder).attr("rx",2).attr("ry",2),this.svgSelection.selectAll("g").data(t,t=>t.id).enter().append("circle").attr("class",t=>["node-background",t.children?"internal-node":"external-node"].join(" ")).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`).attr("cx",0).attr("cy",0).attr("r",this.settings.nodeRadius+this.settings.nodeBackgroundBorder));e.length>0&&this.svgSelection.selectAll("g").data(e,t=>t.id).enter().append("g").attr("id",t=>t.id).attr("class",t=>["mid-branch"].join(" ")).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`).append("rect").attr("class",()=>"node-shape").attr("x",-this.settings.nodeRadius/4).attr("width",this.settings.nodeRadius/2).attr("y",1.5*-this.settings.nodeRadius).attr("height",3*this.settings.nodeRadius).attr("rx",2).attr("ry",2);let n=this.svgSelection.selectAll("g").data(t,t=>t.id).enter().append("g").attr("id",t=>t.label&&t.label.startsWith("#")?t.label.substr(1):t.name?t.name:t===this.tree.rootNode?"root":t.id).attr("class",t=>["node",t.children?"internal-node":"external-node",t.isSelected?"selected":"unselected"].join(" ")).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`);n.append("circle").attr("class",()=>"node-shape").attr("cx",0).attr("cy",0).attr("r",this.settings.nodeRadius),n.append("text").attr("class","node-label").attr("text-anchor","start").attr("alignment-baseline","middle").attr("dx","12").attr("dy","0").text(t=>t.name),n.append("text").attr("class","node-label support").attr("text-anchor","end").attr("dx","-6").attr("dy",t=>t.parent&&t.parent.children[0]===t?"-8":"8").attr("alignment-baseline",t=>t.parent&&t.parent.children[0]===t?"bottom":"hanging").text(t=>t.label&&t.label.startsWith("#")?"":t.label)}.call(this),function(){const t=r.axisBottom(this.scales.x).tickArguments(this.settings.xAxisTickArguments),e=this.scales.width-this.margins.left-this.margins.right;this.svgSelection.append("g").attr("id","x-axis").attr("class","axis").attr("transform",`translate(0, ${this.scales.height-this.margins.bottom+5})`).call(t),this.svgSelection.append("g").attr("id","x-axis-label").attr("class","axis-label").attr("transform",`translate(${this.margins.left}, ${this.scales.height-this.margins.bottom})`).append("text").attr("transform",`translate(${e/2}, 35)`).attr("alignment-baseline","hanging").style("text-anchor","middle").text(this.settings.xAxisTitle)}.call(this,e),this.tree.treeUpdateCallback=(()=>{this.update()})}.call(this,t,n)}update(){this.layout(this.tree);const t=this.tree.externalNodes.length,e=r.max([...this.tree.rootToTipLengths()]);this.scales.x.domain([0,e]),this.scales.y.domain([0,t-1]);const n=r.axisBottom(this.scales.x).tickArguments(this.settings.xAxisTickArguments);this.svgSelection.select("#x-axis").transition().duration(500).call(n);const s=r.line().x(t=>this.scales.x(t.height)).y(t=>this.scales.y(t.width)).curve(this.settings.branchCurve);this.svgSelection.selectAll(".branch").transition().duration(500).attr("d",t=>s(t.location)).attr("class",t=>{let e=["branch"];return t.annotations&&(e=[...e,...Object.entries(t.annotations).filter(([t])=>this.tree.annotations[t].type===i.DISCRETE||this.tree.annotations[t].type===i.BOOLEAN||this.tree.annotations[t].type===i.INTEGER).map(([t,e])=>`${t}-${e}`)]),e.join(" ")}),this.svgSelection.selectAll(".length").transition().duration(500).attr("dx",t=>this.scales.x((t.parent.height+t.height)/2)).attr("dy",t=>t.children&&t.parent&&t.parent.children[0]===t?this.scales.y(t.width)+6:this.scales.y(t.width)-6).attr("alignment-baseline",t=>t.children&&t.parent&&t.parent.children[0]===t?"hanging":"bottom").text(t=>this.settings.lengthFormat(t.length)),this.settings.nodeBackgroundBorder>0&&this.svgSelection.selectAll(".node-background").transition().duration(500).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`),this.svgSelection.selectAll(".node").transition().duration(500).attr("class",t=>{let e=["node",t.children?"internal-node":"external-node",t.isSelected?"selected":"unselected"];return t.annotations&&(e=[...e,...Object.entries(t.annotations).filter(([t])=>this.tree.annotations[t].type===i.DISCRETE||this.tree.annotations[t].type===i.BOOLEAN||this.tree.annotations[t].type===i.INTEGER).map(([t,e])=>`${t}-${e}`)]),e.join(" ")}).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`),this.svgSelection.selectAll(".node-label .support").transition().duration(250).attr("dy",t=>t.parent&&t.parent.children[0]===t?"-8":"8").delay(250).attr("alignment-baseline",t=>t.parent&&t.parent.children[0]===t?"bottom":"hanging"),this.svgSelection.selectAll(".mid-branch").transition().duration(500).attr("class",t=>{let e=["mid-branch"];return t.annotations&&(e=[...e,...Object.entries(t.annotations).filter(([t])=>this.tree.annotations[t].type===i.DISCRETE||this.tree.annotations[t].type===i.BOOLEAN||this.tree.annotations[t].type===i.INTEGER).map(([t,e])=>`${t}-${e}`)]),e.join(" ")}).attr("transform",t=>`translate(${this.scales.x(t.height)}, ${this.scales.y(t.width)})`)}hilightBranches(){this.svgSelection.selectAll(".branch").on("mouseover",function(t,e){r.select(this).attr("class","branch hovered")}),this.svgSelection.selectAll(".branch").on("mouseout",function(t,e){r.select(this).attr("class","branch")})}hilightInternalNodes(){this.hilightNodes(".internal-node")}hilightExternalNodes(){this.hilightNodes(".external-node")}hilightNodes(t){const e=this.svgSelection.selectAll(t).selectAll(".node-shape");e.on("mouseover",(t,e)=>{r.select(this).attr("class","node-shape hovered"),r.select(this).attr("r",this.settings.hoverNodeRadius)}),e.on("mouseout",(t,e)=>{r.select(this).attr("class","node-shape"),r.select(this).attr("r",this.settings.nodeRadius)})}onClickBranch(t,e=null){const n=this;this.svgSelection.selectAll(`${e||".branch"}`).on("click",function(e){const i=n.scales.x(e.height),s=n.scales.x(e.parent.height),o=r.mouse(this)[0],a=Math.max(0,Math.min(1,(o-s)/(i-s)));t(n.tree,e,a),n.update()})}onClickInternalNode(t){onClickNode(t,".internal-node")}onClickExternalNode(t){onClickNode(t,".external-node")}onClickNode(t,e=null){this.svgSelection.selectAll(`${e||".node"}`).selectAll(".node-shape").on("click",e=>{t(this.tree,e),this.update()})}setNodeLabels(t,e){this.svgSelection.selectAll(t),this.update()}addToolTip(t,e){this.svgSelection.selectAll(t).on("mouseover",function(t){let n=document.getElementById("tooltip");n.innerHTML="string"==typeof e?e:e(t),n.style.display="block",n.style.left=r.event.pageX+10+"px",n.style.top=r.event.pageY+10+"px"}),this.svgSelection.selectAll(t).on("mouseout",function(){document.getElementById("tooltip").style.display="none"})}set treeLayout(t){this.layout=t,this.update()}set branchCurve(t){this.curve=t,this.update()}static rotate(t,e){t.rotate(e)}static orderIncreasing(t,e){t.order(e,!0)}static orderDecreasing(t,e){t.order(e,!1)}static reroot(t,e,n){t.reroot(e,n)}static nodeInfo(t){let e=`${t.name?t.name:t.id}`;return Object.entries(t.annotations).forEach(([t,n])=>{e+=`<p>${t}: ${n}</p>`}),e}}n.d(e,"Tree",function(){return s}),n.d(e,"Type",function(){return i}),n.d(e,"rectangularLayout",function(){return o}),n.d(e,"transmissionLayout",function(){return a}),n.d(e,"FigTree",function(){return l})}]);